{"version":3,"sources":["Components/SearchBox.jsx","Components/CardList.jsx","Components/Scrollpane.jsx","Components/ErrorBoundary.jsx","Containers/App.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","CardList","robots","Error","ScrollPane","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","console","log","filteredRobots","filter","name","toLowerCase","includes","length","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,MAbf,YAAsC,IAAjBC,EAAgB,EAAhBA,aACjB,OACI,qBAAKC,UAAU,MAAf,SACI,uBACAA,UAAY,mCACZC,KAAK,SACLC,YAAY,gBACZC,SAAYJ,O,MCWTK,MAjBf,YAGQ,MAHsB,EAAVC,OAGN,IAAIC,MAAM,oB,MCITC,MARf,SAAoBC,GAChB,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,YCiBJC,E,kDAnBX,WAAaN,GAAQ,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHE,E,qDAOpB,WACIC,KAAKC,SAAS,CAACF,UAAU,M,oBAG7B,WACI,OAAIC,KAAKF,MAAMC,SACJ,2DAEJC,KAAKT,MAAMK,a,GAhBEM,aC0DbC,E,kDAlDX,aAAe,IAAD,8BACV,gBAkBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAlB1C,EAAKV,MAAQ,CACTV,OAAQ,GACRkB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAEhBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEF,EAAKZ,SAAS,CAACb,OAASyB,OAE5BC,QAAQC,IAAIf,KAAKF,MAAMV,U,oBAO3B,WAAU,IAAD,OACC4B,EAAiBhB,KAAKF,MAAMV,OAAO6B,QAAO,SAAA7B,GAC5C,OAAOA,EAAO8B,KAAKC,cAAcC,SAAS,EAAKtB,MAAMQ,YAAYa,kBAGrE,OAA6B,IAA1BH,EAAeK,OAEV,qBAAKtC,UAAU,UAAf,SACI,8CAKJ,sBAAKA,UAAY,UAAjB,UACI,6CACA,cAAC,EAAD,CAAWD,aAAgBkB,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUhB,OAAQ4B,e,GA3C5BM,IAAMpB,WCDxBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f623d9fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction SearchBox({ searchChange }) {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className = 'pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='search robots' \r\n            onChange = {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardList({ robots }) {\r\n\r\n    if(true) {\r\n        throw new Error('MOOOOOOOOOOOOOO');\r\n    }\r\n\r\n    const cardComponent = robots.map((user, ind) => {\r\n        return <Card key = {ind} id={robots[ind].id} name={robots[ind].name} email = {robots[ind].email} />\r\n    });\r\n\r\n    return (\r\n        <div className='cardList'>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react'\r\n\r\nfunction ScrollPane(props) {\r\n    return (\r\n        <div style = {{overflowY: 'scroll', border: '5px solid black', height: '600px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScrollPane;\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\n// import {Robots} from './robots';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Cardlist from '../Components/CardList';\r\nimport './App.css';\r\nimport ScrollPane from '../Components/Scrollpane';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() { \r\n        super();  \r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        } \r\n    };\r\n\r\n    componentDidMount() {\r\n        // this.setState({ robots : Robots });\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {\r\n            // console.log(users);\r\n            this.setState({robots : users});\r\n        });\r\n        console.log(this.state.robots);\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        });\r\n\r\n        if(filteredRobots.length === 0){\r\n            return(\r\n                <div className='notLoad'>\r\n                    <h1>Can't Load</h1>\r\n                </div>\r\n            )\r\n        }else {\r\n            return(\r\n                <div className = \"app tc \"> \r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <ScrollPane>\r\n                        <ErrorBoundary>\r\n                            <Cardlist robots={filteredRobots}/> \r\n                        </ErrorBoundary>\r\n                    </ScrollPane>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\n// import Card from './Card'\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log('hello world'));\n"],"sourceRoot":""}